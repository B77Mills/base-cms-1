import gql from "graphql-tag";
import { get } from "@parameter1/base-cms-object-path";
import { warn } from "@parameter1/base-cms-utils";

<!-- @todo This data should generated and saved to the page object as flat data, so no relationships are required. -->

$ const { id } = input;
$ const queryFragment = gql`
fragment MagazineIssueMetadataFragment on MagazineIssue {
  id
  canonicalPath
  publication {
    id
    name
  }
  metadata {
    title
    description
  }
}
`;

<if(id)>
  <marko-web-query|{ node }| name="magazine-issue" params={ id, queryFragment }>
    $ const metadata = {
      title: get(node, "metadata.title"),
      description: get(node, "metadata.description"),
      canonicalPath: node.canonicalPath,
    };
    <common ...metadata />
    <meta property="og:type" content="website" />
    <@when-empty>
      $ warn(`Unable to create magazine issue metadata: no issue found for ${id}.`);
    </@when-empty>
  </marko-web-query>
</if>
<else>
  $ warn('Unable to create magazine issue metadata: no issue id was provided.');
</else>
