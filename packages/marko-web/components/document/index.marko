import { getAsObject } from "@parameter1/base-cms-object-path";

$ const { config } = out.global;

$ const dir = input.dir || "ltr";
$ const lang = input.lang || config.website("language.code", "en-us");
$ const viewport = input.viewport || "width=device-width, initial-scale=1, shrink-to-fit=no";
$ const wrapper = getAsObject(input, "bodyWrapper");

<!doctype html>
<html lang=lang dir=dir>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content=viewport>
    <!-- @todo move polyfills to build script -->
    <polyfill features=["es6", "es7", "fetch", "Promise.prototype.finally"] />

    <!-- @todo eventually determine if styles can be split -->
    <for|href| of=config.styles()>
      <link rel="stylesheet" href=href />
    </for>

    <!-- create browser component queue -->
    <script>
      (function(w) {
        w.markoCompQueue = w.markoCompQueue || [];
        var name = 'CMSBrowserComponents', methods = ['load', 'loadComponent'], queue = function(method) { return function() { w.markoCompQueue.push([method, arguments]) } };
        w[name] = w[name] || {};
        for (var i = 0; i < methods.length; i++) { var method = methods[i]; w[name][method] = w[name][method] || queue(method); }
      })(window);
    </script>

    <${input.head} />
  </head>
  <body>
    <${input.aboveWrapper} />
    <body-wrapper enabled=wrapper.enabled attrs=wrapper.attrs>
      <${input.aboveContainer} />
      <if(input.container)>
        <marko-web-document-container ...input.container />
      </if>
      <${input.belowContainer} />
      <live-reload />
      <${input.foot} />
    </body-wrapper>
    <${input.belowWrapper} />

    <!-- load browser components lib -->
    <for|src| of=config.sources()>
      <script src=src></script>
    </for>
    <script>CMSBrowserComponents.init();</script>
  </body>
</html>
