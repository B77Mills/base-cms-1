import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import { getAsObject } from "@parameter1/base-cms-object-path";
import getRegisterConfig from "../get-register-config";

$ const {
  on,
  requestFrame,
  targetTag,
} = getRegisterConfig({
  name: input.name,
  globalConfig: out.global.$deferScripts,
  inputConfig: {
    on: defaultValue(input.on, "ready"),
    requestFrame: Boolean(input.requestFrame),
    targetTag: defaultValue(input.targetTag, "body"),
  },
});

$ const delay = defaultValue(input.delay, 0);
$ const init = `function() { ${input.init || ''} }`;
$ const initOnly = delay && delay > 0 ? true : defaultValue(input.initOnly, false);
$ const onScriptBuild = `function(script) { ${input.onScriptBuild || ''} }`;
$ const onScriptLoad = `function() { ${input.onScriptLoad || ''} }`;
$ const attrs = JSON.stringify(getAsObject(input, "attrs"));

<script>
  deferScript('register', {
    name: '${input.name}',
    src: '${input.src}',
    on: '${on}',
    requestFrame: ${requestFrame},
    targetTag: '${targetTag}',
    init: ${init},
    initOnly: ${initOnly},
    onScriptBuild: ${onScriptBuild},
    onScriptLoad: ${onScriptLoad},
    attrs: ${attrs}
  });
</script>

<if(delay && delay > 0)>
  <script>
    setTimeout(function() {
      deferScript('load', { name: '${input.name}' });
    }, ${delay});
  </script>
</if>
