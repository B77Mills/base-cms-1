import { getAsObject } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import queryFragment from "../../graphql/fragments/content-list";

$ const modifiers = [
  "latest-content-list",
  ...(input.modifiers ? input.modifiers : []),
];
$ const title = defaultValue(input.title, 'Latest in');
$ const withSection = defaultValue(input.withSection, false);
$ const withNativeXSection = defaultValue(input.withNativeXSection, true);
$ const nodeInput = {
  withTeaser: false,
  imagePosition: "right",
  withSection,
  ...input.node,
};
$ const nodeImageInput = {
  lazyload: true,
  width: 100,
  height: 100,
  ar: "1:1",
  ...getAsObject(input, "node.image"),
};

<if(input.nodes && input.nodes.length)>
  <theme-content-list-flow
    nodes=input.nodes
    inner-justified=false
    native-x=input.nativeX
    modifiers=modifiers
    with-native-x-section=withNativeXSection
  >
    <@header>${title}</@header>
    <@node ...nodeInput >
      <@image ...nodeImageInput />
    </@node>
  </theme-content-list-flow>
</if>
<else>
  $ const queryName = defaultValue(input.queryName, "website-scheduled-content");
  $ const queryParams = {
    sectionAlias: input.alias,
    limit: 4,
    queryFragment,
    ...input.queryParams,
  };
  <marko-web-query|{ nodes }|
    name=queryName
    params=queryParams
  >
    <theme-content-list-flow
    nodes=nodes
    inner-justified=false
    native-x=input.nativeX
    modifiers=modifiers
    with-native-x-section=withNativeXSection
  >
    <@header>${title}</@header>
    <@node ...nodeInput >
      <@image ...nodeImageInput />
    </@node>
  </theme-content-list-flow>
  </marko-web-query>
</else>
