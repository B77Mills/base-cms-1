import { defaultValue } from "@parameter1/base-cms-marko-web/utils";
import { getAsArray, getAsObject } from "@parameter1/base-cms-object-path";
import convertAdToNode from "@parameter1/base-cms-marko-web-native-x/utils/convert-ad-to-node";

$ const { nativeX: nxConfig, i18n } = out.global;
$ const { section } = input;
$ const limit = defaultValue(input.limit, 3);
$ const placementName = defaultValue(input.placementName, "default");
$ const aliases = defaultValue(input.aliases, []);
$ const cols = input.cols != null ? input.cols : limit;
$ const viewMore = defaultValue(input.viewMore, false);
$ const nodeImageInput = getAsObject(input, "node.image");

$ const blockName = "content-card-deck";
$ const uri = nxConfig.getUri();
$ const placement = nxConfig.getPlacement({ name: placementName, aliases });

<marko-web-native-x-fetch-elements|{ ads }| uri=uri id=placement.id opts={ n: limit }>
  $ const hasAd = ads && ads.length && ads[0] && ads[0].hasCampaign;
  <if(hasAd)>
    $ const nodes = ads.filter((ad) => ad.hasCampaign);
    $ const title = input.title || section && section.name;
    $ const description = input.description || section && section.description || input.defaultDescription;
    <marko-web-block name=blockName>
      <if(title)>
        <marko-web-element block-name=blockName name="header">
          <marko-web-element block-name=blockName name="header-left">
            <marko-web-element block-name=blockName name="title">
              ${title}
            </marko-web-element>
            <if(description)>
              <marko-web-element block-name=blockName name="description">
                $!{description}
              </marko-web-element>
            </if>
          </marko-web-element>
          <marko-web-element block-name=blockName name="header-right">
            <if(viewMore && section && section.canonicalPath)>
              <marko-web-element block-name=blockName name="view-more">
                <marko-web-link href=section.canonicalPath>
                  ${i18n("View more")} &raquo;
                </marko-web-link>
              </marko-web-element>
            </if>
          </marko-web-element>
        </marko-web-element>
      </if>

      $ const modifiers = getAsArray(input, "modifiers");
      $ modifiers.push(blockName, `${cols}-cols`);
      <marko-web-block
          name="card-deck-flow"
          modifiers=modifiers
          attrs=input.attrs
        >
          <for|ad| of=nodes>
          <marko-web-element name="node" block-name="card-deck-flow">
            <theme-content-node
              image-position="top"
              card=true
              flush=true
              full-height=true
              with-teaser=false
              with-dates=false
              with-section=false
              ...input.node
              ...convertAdToNode(ad)
            >
              <@image ar="3:2" fluid=true ...nodeImageInput />
            </theme-content-node>
          </marko-web-element>
          </for>
        </marko-web-block>

      <if(viewMore && section && section.canonicalPath)>
        <marko-web-element block-name=blockName name="view-more-bottom">
          <marko-web-link href=section.canonicalPath>
            ${i18n("View more")} &raquo;
          </marko-web-link>
        </marko-web-element>
      </if>
    </marko-web-block>
  </if>
</marko-web-native-x-fetch-elements>
