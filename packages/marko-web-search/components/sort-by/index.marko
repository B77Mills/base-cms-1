import { get, getAsArray, getAsObject } from "@parameter1/base-cms-object-path";
import { dasherize } from "@parameter1/base-cms-inflector";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import { isFunction } from '@parameter1/base-cms-utils';

$ const { $markoWebSearch: search, i18n } = out.global;

$ const blockName = "marko-web-search-sort-by";
$ const options = isFn(i18n) ? [
  { id: 'PUBLISHED', label: `${i18n("Sort")}: ${i18n("Published")}` },
  { id: 'SCORE', label: `${i18n("Sort")}: ${i18n("Relevancy")}` },
] : [
  { id: 'PUBLISHED', label: "Sort: Published" },
  { id: 'SCORE', label: "Sort: Relevancy" },
];

<marko-web-block name=blockName modifiers=input.modifiers>
  $ const { searchQuery, sortField } = search.input;
  $ const selectedId = input.sortField || sortField;
  <if(searchQuery)>
    <marko-web-browser-component
      name="MarkoWebSearchSortSelect"
      props={ options, selectedId }
    />
  </if>
</marko-web-block>
