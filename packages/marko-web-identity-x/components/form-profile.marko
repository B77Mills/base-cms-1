import { get } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

$ const { req } = out.global;
$ const { identityX } = req;
$ const additionalEventData = defaultValue(input.additionalEventData, {});

<if(Boolean(identityX))>
  <marko-web-identity-x-context|{ user, isEnabled, application }|>
    $ const props = {
      activeUser: user,
      requiredServerFields: identityX.config.getRequiredServerFields(),
      requiredClientFields: identityX.config.getRequiredClientFields(),
      hiddenFields: identityX.config.getHiddenFields(),
      defaultCountryCode: identityX.config.get('defaultCountryCode'),
      callToAction: input.callToAction,
      reloadPageOnSubmit: input.reloadPageOnSubmit,
      endpoints: identityX.config.getEndpoints(),
      consentPolicy: get(application, "organization.consentPolicy"),
      emailConsentRequest: get(application, "organization.emailConsentRequest"),
      appContextId: identityX.config.get("appContextId"),
      regionalConsentPolicies: get(application, "organization.regionalConsentPolicies"),
      additionalEventData: additionalEventData,
    };
    <if(isEnabled)>
      <marko-web-browser-component name="IdentityXProfile" props=props />
    </if>
  </marko-web-identity-x-context>
</if>
